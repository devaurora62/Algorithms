PSEUDOCODE

Counting_Sort(arr, n)
{
  Integer Min -> arr[0]
  Integer Max -> arr[0]
  Integer frequency[100001] -> {0}
  frequency[arr[0]] -> frequency[arr[0]]+1
  for i=1, i<n, i=i+1
  {
    frequency[a[i]] -> frequency[arr[i]]+1
    if Max < arr[i]
    {
      Max -> arr[i]
    }
    if Min > arr[i]
    {
      Min -> arr[i]
    }
  }
  Integer new_n -> 0
  for i=Min, i<=Max, i=i+1
  {
    for j=0, j<frequency[i], j=j+1
    {
      arr[new_n] -> i
      new_n -> new_n+1
    }
  }
  n -> new_n
}


C++

#include <iostream>

#define nMax 100001

void Counting_Sort(int& n, int a[])
{
    int Min=a[0], Max=a[0], fr[nMax]={0};
    for(int i=0; i<n; i++)
    {
        fr[a[i]]++;
        Max = std::max(Max, a[i]);
        Min = std::min(Min, a[i]);
    }
    int k=0;
    for(int i=Min; i<=Max; i++)
        for(int j=0; j<fr[i]; j++)
            a[k++]=i;
    n=k;
}

int main()
{
    std::ios_base::sync_with_stdio(0);
    std::cin.tie(0);
    std::cout.tie(0);
    int n, a[nMax];
    std::cin >> n;
    for(int i=0; i<n; i++)
        std::cin >> a[i];
    Counting_Sort(n, a);
    for(int i=0; i<n; i++)
        std::cout << a[i] << ' ';
    return 0;
}


Python

def Counting_Sort(arr, n):
    fr = {}
    Min = arr[0]
    Max = arr[0]
    for i in range(n):
        fr.update({arr[i]: 0})
        Min = min(Min, arr[i])
        Max = max(Max, arr[i])
    for i in range(n):
        fr[arr[i]] += 1;
    arr = []
    for i in range(Min, Max+1):
        if i in fr:
            if fr[i]!=0:
                for j in range(fr[i]):
                    arr.append(i)
    print(arr)


a = [2, 56, 45, 13, 9, 0]
n = len(a)

Counting_Sort(a, n)
